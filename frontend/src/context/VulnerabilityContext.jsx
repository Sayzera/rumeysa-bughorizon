import { createContext, useContext, useState } from 'react';

const VulnerabilityContext = createContext();

export const VulnerabilityProvider = ({ children }) => {
  const [vulnerabilities, setVulnerabilities] = useState({
    zipSlip: false,
    brokenAuth: false,
    sqlInjection: false,
    xss: false,
    securityMisconfig: false,
    csrf: false,
    loggingDeficiencies: false,
    ssrf: false,
    csp: false
  });

  const toggleVulnerability = (vulnerability) => {
    setVulnerabilities(prev => ({
      ...prev,
      [vulnerability]: !prev[vulnerability]
    }));
  };

  return (
    <VulnerabilityContext.Provider value={{ vulnerabilities, toggleVulnerability }}>
      {children}
    </VulnerabilityContext.Provider>
  );
};

export const useVulnerability = () => {
  const context = useContext(VulnerabilityContext);
  if (!context) {
    throw new Error('useVulnerability must be used within a VulnerabilityProvider');
  }
  return context;
}; 