import React, { useState } from 'react';
import { TextField, Button, Box, Grid } from '@mui/material';
import axios from 'axios'
import { endpoints } from "../../constant/endpoints.js";

function VulnerabilityScreen() {
    const [zafiyetAdi, setZafiyetAdi] = useState('');
    const [zafiyetAciklamasi, setZafiyetAciklamasi] = useState('');
    const [message,setMessage] = useState('')

    const handleSubmit = () => {
        if(zafiyetAdi==='' || zafiyetAciklamasi===''){
            alert("Zafiyet adı ve açıklama alanları boş geçilemez.")
            return;
        }
        axios.post(
            import.meta.env.VITE_BASE_URL + endpoints.createVulnerability, {
                zaafiyet_adi: zafiyetAdi,
                zaafiyet_aciklamasi: zafiyetAciklamasi,
            }
        ).then((res) => 
            setMessage(res.data.message)
        )
        .catch((error) => {
          const err = error.response.data;
          alert(err.message)
        })
    };

    return (
        <Grid container spacing={3}>
            <Grid item xs={12} md={8} mt={12}>
                <Box className="vulnerability-screen" sx={{ p: 3, maxWidth: '500px', margin: '0 auto' }}>
                    <h1>Zafiyet Ekle</h1>
                    
                        <TextField
                            label="Zaafiyet Adı"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={zafiyetAdi}
                            onChange={(e) => setZafiyetAdi(e.target.value)}
                        />
                        <TextField
                            label="Zaafiyet Açıklaması"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            multiline
                            rows={4}
                            value={zafiyetAciklamasi}
                            onChange={(e) => setZafiyetAciklamasi(e.target.value)}
                        />
                        <Button
                            type="submit"
                            variant="contained"
                            color="primary"
                            fullWidth
                            sx={{ mt: 2 }}
                            onClick={handleSubmit}
                        >
                            Ekle
                        </Button>
                        {message && <p>{message}</p>}
                    
                </Box>
            </Grid>
        </Grid>
    );
}

export default VulnerabilityScreen;